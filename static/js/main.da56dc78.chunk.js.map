{"version":3,"sources":["components/Profile.js","components/Work.js","components/Skills.js","components/Education.js","components/Interests.js","components/Resume.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["config","name","icon","content","loc","concat","city","region","web","react_default","a","createElement","href","Profile","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleScroll","e","srcElement","scrollingElement","scrollTop","setState","atTop","state","window","addEventListener","removeEventListener","_this$props","props","mobile","Grid","centered","Column","textAlign","id","className","Header","picture","Image","src","circular","Icon","Content","Subheader","label","Row","Segment","basic","compact","List","items","map","item","key","profiles","style","padding","horizontal","size","p","network","toLowerCase","as","url","title","Divider","React","Component","Work","_ref","work","w","dateOptions","month","year","from","Date","startDate","toLocaleDateString","undefined","to","endDate","Item","position","website","company","summary","highlights","h","idx","Skills","skills","relaxed","s","header","Label","Group","keywords","k","Edu","education","area","studyType","institution","gpa","Interests","interests","i","structure","component","basics","Education","Resume","contextRef","createRef","columns","width","only","Sticky","context","offset","components_Profile","resume","computer","tablet","Ref","innerRef","unstackable","part","defineProperty","toUpperCase","App","components_Resume","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da56dc78.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Grid,\n  Header,\n  Image,\n  Icon,\n  Segment,\n  Divider,\n  List,\n} from 'semantic-ui-react';\n\nconst config = [{\n  name: 'location',\n  icon: 'map marker alternate',\n  content: loc => `${loc.city}, ${loc.region}`,\n}, {\n  name: 'email',\n  icon: 'mail outline',\n}, {\n  name: 'website',\n  icon: 'linkify',\n  content: web => <a href={ web }>{ web }</a>,\n}]\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      atTop: true,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = e => {\n    if (e.srcElement.scrollingElement.scrollTop === 0) {\n      this.setState({ atTop: true });\n    } else {\n      this.setState({ atTop: false });\n    }\n  }\n\n  render() {\n    const { content, mobile } = this.props;\n\n    if (mobile) {\n      return (\n        <Grid centered>\n          <Grid.Column\n            textAlign=\"center\"\n            id=\"resume__persona_mobile\"\n            className={ this.state.atTop ? 'scrolled-up' : '' }\n          >\n            <Header>\n              { content.picture ? (\n                <Image src={ content.picture } circular />\n              ) : <Icon name=\"user\" /> }\n              <Header.Content>\n                { content.name }\n                <Header.Subheader>\n                  { content.label }\n                </Header.Subheader>\n              </Header.Content>\n            </Header>\n          </Grid.Column>\n          <Grid.Row>\n            <Grid.Column id=\"resume__contacts_mobile\">\n              <Segment basic compact className=\"centered\">\n                <List\n                  items={ config.map(item => content[item.name] ? ({\n                    key: item.name,\n                    icon: item.icon,\n                    content: item.content ? item.content(content[item.name]) : content[item.name],\n                  }) : null) }\n                />\n              </Segment>\n            </Grid.Column>\n          </Grid.Row>\n          { !!content.profiles && (\n            <Grid.Row style={{ padding: 0 }}>\n              <Grid.Column textAlign=\"center\">\n                <List\n                  horizontal\n                  size=\"large\"\n                  items={ content.profiles.map(p => ({\n                    key: p.network,\n                    icon: p.network.toLowerCase(),\n                    as: 'a',\n                    href: p.url,\n                    title: `${content.name} on ${p.network}`,\n                  })) }\n                />\n              </Grid.Column>\n            </Grid.Row>\n          ) }\n        </Grid>\n      );\n    }\n\n    return (\n      <Segment basic>\n        { content.picture ? (\n          <Image src={ content.picture } size=\"small\" circular centered />\n        ) : <Icon name=\"user\" /> }\n        <Header textAlign=\"center\">\n          { content.name }\n          <Header.Subheader content={ content.label } />\n        </Header>\n        <Divider />\n        <List\n          items={ config.map(item => content[item.name] ? ({\n            key: item.name,\n            icon: item.icon,\n            content: item.content ? item.content(content[item.name]) : content[item.name],\n          }) : null) }\n        />\n        { !!content.profiles && (\n          <List\n            horizontal\n            size=\"huge\"\n            items={ content.profiles.map(p => ({\n              key: p.network,\n              icon: p.network.toLowerCase(),\n              as: 'a',\n              href: p.url,\n              title: `${content.name} on ${p.network}`,\n            })) }\n          />\n        ) }\n      </Segment>\n    );\n  }\n}\n\nexport default Profile;\n","import React from 'react';\nimport { List } from 'semantic-ui-react';\n\nconst Work = ({ work }) => (\n  <List>\n    { work.map((w) => {\n      const dateOptions = { month: 'short', year: 'numeric' };\n      const from = new Date(w.startDate).toLocaleDateString(undefined, dateOptions);\n      const to = w.endDate ? new Date(w.endDate).toLocaleDateString(undefined, dateOptions) : 'Present';\n      return (\n        <List.Item key={ w.startDate }>\n          <List.Header as=\"h5\">\n            { w.position }\n            { ',  ' }\n            { w.website ? (\n              <a href={ w.website }>{ w.company }</a>\n            ) : w.company }\n          </List.Header>\n          <List.Content>\n            <p className=\"text__muted\">{ `${from} - ${to}` }</p>\n            <p>{ w.summary }</p>\n            <List.List as=\"ul\">\n              { w.highlights.map((h, idx) => (\n                <List.Item key={ idx } as=\"li\" content={ h } />\n              )) }\n            </List.List>\n          </List.Content>\n        </List.Item>\n      );\n    }) }\n  </List>\n);\n\nexport default Work;\n","import React from 'react';\nimport { List, Label } from 'semantic-ui-react';\n\nconst Skills = ({ skills }) => (\n  <List\n    relaxed\n    items={ skills.map(s => ({\n      key: s.name,\n      header: s.name,\n      content: (\n        <Label.Group size=\"small\">\n          { s.keywords.map(k => (\n            <Label\n              key={ k }\n              content={ k }\n              className=\"label__skills\"\n            />\n          )) }\n        </Label.Group>\n      ),\n    })) }\n  />\n);\n\nexport default Skills;\n","import React from 'react';\nimport { List, Header } from 'semantic-ui-react';\n\nconst Edu = ({ education }) => (\n  <List\n    items={ education.map((e) => {\n      const dateOptions = { month: 'short', year: 'numeric' };\n      const from = new Date(e.startDate).toLocaleDateString(undefined, dateOptions);\n      const to = e.endDate ? new Date(e.endDate).toLocaleDateString(undefined, dateOptions) : 'Present';\n      return {\n        key: e.startDate,\n        header: (\n          <Header as=\"h5\">\n            { `${e.area}, ${e.studyType}, ` }\n            { e.website ? (\n              <a href={ e.website }>{ e.institution }</a>\n            ) : e.institution }\n          </Header>\n        ),\n        content: (\n          <div>\n            <p className=\"text__muted\">{ `${from} - ${to}` }</p>\n            { !!e.gpa && <p>GPA: { e.gpa }</p> }\n          </div>\n        ),\n      };\n    }) }\n  />\n);\n\nexport default Edu;\n","import React from 'react';\nimport { List, Label } from 'semantic-ui-react';\n\nconst Interests = ({ interests }) => (\n  <List\n    relaxed\n    items={ interests.map(i => ({\n      key: i.name,\n      header: i.name,\n      content: (\n        <Label.Group size=\"small\">\n          { i.keywords.map(k => (\n            <Label\n              key={ k }\n              content={ k }\n              className=\"label__interests\"\n              basic\n            />\n          )) }\n        </Label.Group>\n      ),\n    })) }\n  />\n);\n\nexport default Interests;\n","import React from 'react';\nimport {\n  Grid, Ref, Sticky, Segment, Icon, Divider, Item,\n} from 'semantic-ui-react';\nimport Profile from './Profile';\nimport About from './About';\nimport Work from './Work';\nimport Skills from './Skills';\nimport Education from './Education';\nimport Interests from './Interests';\nimport resume from './resume.json';\nimport '../styles/resume.css';\n\nconst structure = [{\n  name: 'basics',\n  title: 'About',\n  component: About,\n  icon: 'id card outline',\n}, {\n  name: 'skills',\n  title: 'Technologies',\n  component: Skills,\n  icon: 'code',\n}, {\n  name: 'work',\n  title: 'Experience',\n  component: Work,\n  icon: 'building outline',\n}, {\n  name: 'education',\n  title: 'Education',\n  component: Education,\n  icon: 'graduation',\n}, {\n  name: 'interests',\n  title: 'Interests',\n  component: Interests,\n  icon: 'heart outline',\n}];\n\nclass Resume extends React.Component {\n  contextRef = React.createRef();\n\n  render() {\n    return (\n      <Grid id=\"resume\" centered columns={ 2 }>\n        <Grid.Column width={ 4 } only=\"computer tablet\">\n          <Sticky context={ this.contextRef } offset={ 44 }>\n            <Profile content={ resume.basics } />\n          </Sticky>\n        </Grid.Column>\n        <Grid.Column width={ 16 } only='mobile'>\n          <Profile content={ resume.basics } mobile contextRef={ this.contextRef } />\n        </Grid.Column>\n        <Grid.Column computer={ 12 } tablet={ 12 } mobile={ 16 }>\n          <Ref innerRef={ this.contextRef }>\n            <Segment>\n              <Item.Group unstackable>\n                { structure.map((part) => {\n                  const Content = part.component;\n                  const props = { [part.name]: resume[part.name] };\n                  return (\n                  <Item key={ part.name }>\n                    <div className=\"ui image\">\n                      <Icon name={ part.icon } size=\"large\" />\n                    </div>\n                    <Item.Content>\n                      <Item.Header>\n                        { part.title.toUpperCase() }\n                      </Item.Header>\n                      <Divider />\n                      <Content { ...props } />\n                    </Item.Content>\n                  </Item>\n                  );\n                }) }\n              </Item.Group>\n            </Segment>\n          </Ref>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n} \n\nexport default Resume;\n","export default ({ basics }) => basics.summary;\n","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './styles/index.css';\n\nimport Resume from './components/Resume';\n\nconst App = props => {\n  return (\n    <div className=\"main\">\n      <Resume />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below... Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}